package com.example.lyalyapomidortodo.ui.screens

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.runtime.livedata.observeAsState
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.lifecycle.viewmodel.compose.viewModel
import com.example.lyalyapomidortodo.data.local.entities.Category
import com.example.lyalyapomidortodo.ui.components.CategoryCard
import com.example.lyalyapomidortodo.ui.components.TimerComponent
import com.example.lyalyapomidortodo.viewmodel.PomodoroViewModel

/**
 * –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Pomodoro —Å —Ç–∞–π–º–µ—Ä–æ–º –∏ —Å–ø–∏—Å–∫–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É Compose:
 * - State hoisting - —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ ViewModel
 * - Composable functions - UI —Ä–∞–∑–±–∏—Ç –Ω–∞ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
 * - Material3 Design - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω Google
 */
@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun PomodoroScreen(
    viewModel: PomodoroViewModel = viewModel(),
    modifier: Modifier = Modifier
) {
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ç–∞–π–º–µ—Ä–∞
    val timerState by viewModel.timerState
    
    // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ —Å–ø–∏—Å–∫–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º LiveData –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    val categories by viewModel.categories.observeAsState(emptyList())

    // –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º —ç–∫—Ä–∞–Ω–∞
    Column(
        modifier = modifier
            .fillMaxSize()
            .padding(16.dp),
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        Text(
            text = "Lyalya Pomidor",
            style = MaterialTheme.typography.headlineMedium,
            fontWeight = FontWeight.Bold,
            color = MaterialTheme.colorScheme.primary,
            modifier = Modifier.padding(bottom = 24.dp)
        )
        
        // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–∞–π–º–µ—Ä–∞ Pomodoro
        TimerComponent(
            timerState = timerState,
            onPauseResumeClick = { viewModel.togglePauseResume() },
            onStopClick = { viewModel.stopTimer() },
            onRestartClick = { viewModel.restartTimer() },
            modifier = Modifier.padding(bottom = 32.dp)
        )
        
        // –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        HorizontalDivider(
            modifier = Modifier.padding(vertical = 16.dp),
            color = MaterialTheme.colorScheme.outlineVariant
        )
        
        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        Row(
            modifier = Modifier
                .fillMaxWidth()
                .padding(bottom = 16.dp),
            horizontalArrangement = Arrangement.SpaceBetween,
            verticalAlignment = Alignment.CenterVertically
        ) {
            Text(
                text = "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á",
                style = MaterialTheme.typography.titleLarge,
                fontWeight = FontWeight.SemiBold
            )
            
            // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            FilledTonalButton(
                onClick = { viewModel.addNewCategory() },
                modifier = Modifier.height(36.dp)
            ) {
                Text(
                    text = "+ –î–æ–±–∞–≤–∏—Ç—å",
                    fontSize = 14.sp
                )
            }
        }
        
        // –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        if (categories.isEmpty()) {
            // –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            EmptyCategoriesState(
                onAddCategoryClick = { viewModel.addNewCategory() },
                modifier = Modifier.fillMaxWidth()
            )
        } else {
            // –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ —Å–∫—Ä–æ–ª–ª–∏—Ä—É–µ–º–æ–π –∫–æ–ª–æ–Ω–∫–µ
            LazyColumn(
                modifier = Modifier.fillMaxWidth(),
                verticalArrangement = Arrangement.spacedBy(8.dp)
            ) {
                items(
                    items = categories,
                    key = { category -> category.id }
                ) { category ->
                    CategoryCard(
                        category = category,
                        onStartTimerClick = { viewModel.startTimer(category) },
                        onEditCategory = { updatedCategory -> 
                            viewModel.updateCategory(updatedCategory) 
                        },
                        onDeleteCategory = { 
                            viewModel.deleteCategory(category) 
                        },
                        isTimerRunning = timerState.isRunning && 
                                       timerState.currentActivityTitle == category.title,
                        currentSessionTime = if (timerState.currentActivityTitle == category.title) {
                            timerState.formattedSessionTime
                        } else {
                            "00:00:00"
                        }
                    )
                }
            }
        }
    }
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–∫–æ–≥–¥–∞ –Ω–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π)
 */
@Composable
private fun EmptyCategoriesState(
    onAddCategoryClick: () -> Unit,
    modifier: Modifier = Modifier
) {
    Column(
        modifier = modifier.padding(32.dp),
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Text(
            text = "üçÖ",
            fontSize = 48.sp,
            modifier = Modifier.padding(bottom = 16.dp)
        )
        
        Text(
            text = "–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞–¥–∞—á",
            style = MaterialTheme.typography.titleMedium,
            textAlign = TextAlign.Center,
            color = MaterialTheme.colorScheme.onSurfaceVariant,
            modifier = Modifier.padding(bottom = 8.dp)
        )
        
        Text(
            text = "–°–æ–∑–¥–∞–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ–º–æ—â—å—é —Ç–µ—Ö–Ω–∏–∫–∏ Pomodoro",
            style = MaterialTheme.typography.bodyMedium,
            textAlign = TextAlign.Center,
            color = MaterialTheme.colorScheme.onSurfaceVariant,
            modifier = Modifier.padding(bottom = 24.dp)
        )
        
        Button(
            onClick = onAddCategoryClick,
            modifier = Modifier.fillMaxWidth(0.6f)
        ) {
            Text("–°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        }
    }
} 